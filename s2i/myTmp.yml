kind: Template
apiVersion: v1
metadata:
  name: my-template
  annotations:
    display-name: "My demo code for testing"
    tags: "demo,php,http"
    iconClass: icon-php    
labels:
  app: ${APPLICATION_NAME}
  owner: willie
  location: dal13
parameters:
  - name: SOURCE_REPOSITORY_URI
    displayName: Source Repository URI
    description: The URI of the repository with my application code
    value: https://github.com/nicholasttx/mywebapp.git
    required: true
  - name: APPLICATION_NAME
    description: Name of application
    displayName: Application Name
    value: mytemplate-http
    required: true
  - name: IMAGE_PULL_NAME
    description: This is the name used for pulling image for buildconfig section
    value: mymsjl/myapphttp:v1
    required: true
objects:
  - kind: BuildConfig
    apiVersion: v1
    metadata: 
      name: ${APPLICATION_NAME}
      annotations:
        description: Test for how to make template and buildconfig/s2i
      spec:
        source:
          type: Git
          git:
            uri: "${SOURCE_REPOSITORY_URI}"
            ref: master
        strategy:
          sourceStrategy:
            from:
              kind: "ImageStreamTag"
              name: "php:7.1"
              namespace: openshift
          type: Source
        output:
          to: 
            kind: "DockerImage"
            name: ${IMAGE_PULL_NAME}            
      labels:
        app: ${APPLICATION_NAME}
      

          
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      labels:
        app: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 2
      selector:
        app: ${APPLICATION_NAME}    
      strategy:
        activeDeadlineSeconds: 21600
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling  
      template:
        metadata:
          labels:
            app: ${APPLICATION_NAME}       
        spec:
          containers:
          - image: ${IMAGE_PULL_NAME}
            imagePullPolicy: IfNotPresent
            name: willieweb
            ports:
            - containerPort: 18080
              protocol: TCP  
              
  - kind: Service
    apiVersion: v1
    metadata:
      name: ${APPLICATION_NAME}-service
    spec:
      ports:
        - name: 18080-tcp
          port: 18080
          targetPort: 18080
      selector:
        app: ${APPLICATION_NAME}
  - kind: Route
    apiVersion: v1
    metadata:
      labels:
        app: ${APPLICATION_NAME}        
      name: ${APPLICATION_NAME}-route
    spec:
      host: 
      path: 
      to:
        kind: Service
        name: ${APPLICATION_NAME}-service
      port:
        targetPort: 18080-tcp        
                  
              
              
              
              
              



























    


        
